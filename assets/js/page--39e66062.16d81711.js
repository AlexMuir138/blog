(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{478:function(t,n,e){"use strict";e.r(n);var a=e(2),o=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Journal 46\nWhat is the difference between a primary key and a foreign key")]),t._v(" "),e("p",[t._v("Foreign keys are attributes that you assign so that you can access many to many relationships where primary keys are simply the ids you can pull from an object.")]),t._v(" "),e("p",[t._v("What is an Alias?")]),t._v(" "),e("p",[t._v("An assigned shorthand for variables that have specific functions or long names.")]),t._v(" "),e("p",[t._v("Demonstrate how you would query a join statement that would get all of a doctors patients from the following collections:")]),t._v(" "),e("p",[t._v("CREATE TABLE doctors (\nid INT NOT NULL AUTO_INCREMENT,\n-- CODE OMITTED\nPRIMARY KEY (id)\n)")]),t._v(" "),e("p",[t._v("CREATE TABLE patients (\nid INT NOT NULL AUTO_INCREMENT,\n-- CODE OMITTED\nPRIMARY KEY (id)\n)")]),t._v(" "),e("p",[t._v("CREATE TABLE doctors_patients (\nid INT NOT NULL AUTO_INCREMENT,\ndoctorId INT NOT NULL,\npatientId INT NOT NULL,")]),t._v(" "),e("p",[t._v('FOREIGN KEY (doctorId)\nREFERENCES doctors(id),\nFOREIGN KEY (patientId)\nREFERENCES patients(id),\n)\nstring  sql = @"\n//   SELECT\n//   d.'),e("em",[t._v(",\n//   dp.")]),t._v("\n//   FROM doctors_patients dp\n//   JOIN keeps d ON d.id = dp.keepId\n//   WHERE dp.patientId = @PatientId;")]),t._v(" "),e("p",[t._v("https://github.com/AlexMuir138/RealmCommander.git")])])}),[],!1,null,null,null);n.default=o.exports}}]);